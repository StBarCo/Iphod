var _user$project$Iphod_Sunday$collectStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.show,
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '1em'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '0em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '0em'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'list-style-type', _1: 'none'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Iphod_Sunday$textStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.show,
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '1em'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '0em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '0em'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'list-style-type', _1: 'none'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Iphod_Sunday$titleStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.show,
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '0.9em'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'blue'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'height', _1: '3em'},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Iphod_Sunday$bodyStyle = function (lesson) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		lesson.show,
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'white'},
			_1: {ctor: '[]'}
		});
};
var _user$project$Iphod_Sunday$tableStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.show,
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {ctor: '[]'}
		});
};
var _user$project$Iphod_Sunday$selections = F2(
	function (model, lesson) {
		var this_ver = function () {
			var _p0 = lesson.section;
			switch (_p0) {
				case 'ot':
					return model.config.ot;
				case 'ps':
					return model.config.ps;
				case 'nt':
					return model.config.nt;
				case 'gs':
					return model.config.nt;
				default:
					return model.config.current;
			}
		}();
		return {ctor: '::', _0: this_ver, _1: model.config.vers};
	});
var _user$project$Iphod_Sunday$hoverable = function (attrs) {
	return attrs;
};
var _user$project$Iphod_Sunday$this_style = function (l) {
	var _p1 = l.style;
	switch (_p1) {
		case 'req':
			return _elm_lang$html$Html_Attributes$class('req_style');
		case 'opt':
			return _elm_lang$html$Html_Attributes$class('opt_style');
		case 'alt':
			return _elm_lang$html$Html_Attributes$class('alt_style');
		case 'alt-req':
			return _elm_lang$html$Html_Attributes$class('alt_style');
		case 'alt-opt':
			return _elm_lang$html$Html_Attributes$class('altOpt_style');
		default:
			return _elm_lang$html$Html_Attributes$class('bogis_style');
	}
};
var _user$project$Iphod_Sunday$thisProper = function (proper) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('proper_title'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_elm_lang$core$Basics_ops['++'], 'Proper: ', proper.title)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('proper_text'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(proper.text),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Iphod_Sunday$thisCollect = function (sundayCollect) {
	var this_collect = function (c) {
		return A2(
			_elm_lang$html$Html$p,
			{ctor: '[]'},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(c.collect),
					_1: {ctor: '[]'}
				},
				A2(_elm_lang$core$List$map, _user$project$Iphod_Sunday$thisProper, c.propers)));
	};
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$p,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('collect_instruction'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(sundayCollect.instruction),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('collect_title'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(sundayCollect.title),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('collect_text'),
						_1: {ctor: '[]'}
					},
					A2(_elm_lang$core$List$map, this_collect, sundayCollect.collects)),
				_1: {ctor: '[]'}
			}
		}
	};
};
var _user$project$Iphod_Sunday$updateModel = F3(
	function (model, lesson, newSection) {
		var _p2 = lesson.section;
		switch (_p2) {
			case 'ot':
				return _elm_lang$core$Native_Utils.update(
					model,
					{ot: newSection});
			case 'ps':
				return _elm_lang$core$Native_Utils.update(
					model,
					{ps: newSection});
			case 'nt':
				return _elm_lang$core$Native_Utils.update(
					model,
					{nt: newSection});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{gs: newSection});
		}
	});
var _user$project$Iphod_Sunday$thisSection = F2(
	function (model, lesson) {
		var _p3 = lesson.section;
		switch (_p3) {
			case 'ot':
				return model.ot;
			case 'ps':
				return model.ps;
			case 'nt':
				return model.nt;
			default:
				return model.gs;
		}
	});
var _user$project$Iphod_Sunday$changeText = F3(
	function (model, ver, lessons) {
		var changeText = function (lesson) {
			return _elm_lang$core$Native_Utils.update(
				lesson,
				{
					version: ver,
					cmd: A2(
						_elm_lang$core$Basics_ops['++'],
						'new',
						_elm_lang$core$String$toUpper(lesson.section))
				});
		};
		return A2(_elm_lang$core$List$map, changeText, lessons);
	});
var _user$project$Iphod_Sunday$getRef = function (lessons) {
	var justRefs = function (l) {
		return l.read;
	};
	return A2(
		_elm_lang$core$String$join,
		',',
		A2(_elm_lang$core$List$map, justRefs, lessons));
};
var _user$project$Iphod_Sunday$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'NoOp':
				return model;
			case 'ToggleModelShow':
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{show: !model.show});
				return newModel;
			case 'SetReading':
				return _p4._0;
			case 'ChangeText':
				var _p9 = _p4._1;
				var _p8 = _p4._0;
				var thisRef = function () {
					var _p5 = _p8;
					switch (_p5) {
						case 'ot':
							return _user$project$Iphod_Sunday$getRef(model.ot);
						case 'ps':
							return _user$project$Iphod_Sunday$getRef(model.ps);
						case 'nt':
							return _user$project$Iphod_Sunday$getRef(model.nt);
						case 'gs':
							return _user$project$Iphod_Sunday$getRef(model.gs);
						default:
							return '';
					}
				}();
				var thisUpdate = A3(_user$project$Iphod_Models$setSectionUpdate, _p8, _p9, thisRef);
				var thisConfig = model.config;
				var newConfig = function () {
					var _p6 = _p8;
					switch (_p6) {
						case 'ot':
							return _elm_lang$core$Native_Utils.update(
								thisConfig,
								{ot: _p9});
						case 'ps':
							return _elm_lang$core$Native_Utils.update(
								thisConfig,
								{ps: _p9});
						case 'nt':
							return _elm_lang$core$Native_Utils.update(
								thisConfig,
								{nt: _p9});
						case 'gs':
							return _elm_lang$core$Native_Utils.update(
								thisConfig,
								{gs: _p9});
						default:
							return thisConfig;
					}
				}();
				var newModel = function () {
					var _p7 = _p8;
					switch (_p7) {
						case 'ot':
							return _elm_lang$core$Native_Utils.update(
								model,
								{
									ot: A3(_user$project$Iphod_Sunday$changeText, model, _p9, model.ot),
									sectionUpdate: thisUpdate,
									config: newConfig
								});
						case 'ps':
							return _elm_lang$core$Native_Utils.update(
								model,
								{
									ps: A3(_user$project$Iphod_Sunday$changeText, model, _p9, model.ps),
									sectionUpdate: thisUpdate,
									config: newConfig
								});
						case 'nt':
							return _elm_lang$core$Native_Utils.update(
								model,
								{
									nt: A3(_user$project$Iphod_Sunday$changeText, model, _p9, model.nt),
									sectionUpdate: thisUpdate,
									config: newConfig
								});
						default:
							return _elm_lang$core$Native_Utils.update(
								model,
								{
									gs: A3(_user$project$Iphod_Sunday$changeText, model, _p9, model.gs),
									sectionUpdate: thisUpdate,
									config: newConfig
								});
					}
				}();
				return newModel;
			case 'UpdateAltReading':
				var _p10 = _p4._0;
				var update_altReading = function (this_lesson) {
					return _elm_lang$core$Native_Utils.eq(this_lesson.id, _p10.id) ? _elm_lang$core$Native_Utils.update(
						this_lesson,
						{altRead: _p4._1}) : this_lesson;
				};
				var this_section = A2(_user$project$Iphod_Sunday$thisSection, model, _p10);
				var newSection = A2(_elm_lang$core$List$map, update_altReading, this_section);
				var newModel = A3(_user$project$Iphod_Sunday$updateModel, model, _p10, newSection);
				return newModel;
			case 'RequestAltReading':
				var _p12 = _p4._0;
				var newLesson = {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.update(
						_p12,
						{
							cmd: A2(
								_elm_lang$core$Basics_ops['++'],
								'alt',
								_elm_lang$core$String$toUpper(_p12.section))
						}),
					_1: {ctor: '[]'}
				};
				var thisUpdate = A3(_user$project$Iphod_Models$setSectionUpdate, _p12.section, _p12.version, _p12.altRead);
				var newModel = function () {
					var _p11 = _p12.section;
					switch (_p11) {
						case 'ot':
							return _elm_lang$core$Native_Utils.update(
								model,
								{ot: newLesson, sectionUpdate: thisUpdate});
						case 'ps':
							return _elm_lang$core$Native_Utils.update(
								model,
								{ps: newLesson, sectionUpdate: thisUpdate});
						case 'nt':
							return _elm_lang$core$Native_Utils.update(
								model,
								{nt: newLesson, sectionUpdate: thisUpdate});
						default:
							return _elm_lang$core$Native_Utils.update(
								model,
								{gs: newLesson, sectionUpdate: thisUpdate});
					}
				}();
				return newModel;
			case 'ToggleShow':
				var _p13 = _p4._0;
				var update_text = function (this_lesson) {
					return _elm_lang$core$Native_Utils.eq(this_lesson.id, _p13.id) ? _elm_lang$core$Native_Utils.update(
						this_lesson,
						{show: !this_lesson.show}) : this_lesson;
				};
				var this_section = A2(_user$project$Iphod_Sunday$thisSection, model, _p13);
				var newSection = A2(_elm_lang$core$List$map, update_text, this_section);
				var newModel = A3(_user$project$Iphod_Sunday$updateModel, model, _p13, newSection);
				return newModel;
			default:
				var collect = model.collect;
				var newCollect = _elm_lang$core$Native_Utils.update(
					collect,
					{show: !collect.show});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{collect: newCollect});
				return newModel;
		}
	});
var _user$project$Iphod_Sunday$init = _user$project$Iphod_Models$sundayInit;
var _user$project$Iphod_Sunday$GS = {ctor: 'GS'};
var _user$project$Iphod_Sunday$NT = {ctor: 'NT'};
var _user$project$Iphod_Sunday$PS = {ctor: 'PS'};
var _user$project$Iphod_Sunday$OT = {ctor: 'OT'};
var _user$project$Iphod_Sunday$ToggleCollect = {ctor: 'ToggleCollect'};
var _user$project$Iphod_Sunday$ToggleModelShow = {ctor: 'ToggleModelShow'};
var _user$project$Iphod_Sunday$ToggleShow = function (a) {
	return {ctor: 'ToggleShow', _0: a};
};
var _user$project$Iphod_Sunday$RequestAltReading = function (a) {
	return {ctor: 'RequestAltReading', _0: a};
};
var _user$project$Iphod_Sunday$ChangeText = F2(
	function (a, b) {
		return {ctor: 'ChangeText', _0: a, _1: b};
	});
var _user$project$Iphod_Sunday$thisReading = F2(
	function (model, section) {
		var ver = function () {
			var _p14 = section;
			switch (_p14.ctor) {
				case 'OT':
					return model.config.ot;
				case 'PS':
					return model.config.ps;
				case 'NT':
					return model.config.nt;
				default:
					return model.config.gs;
			}
		}();
		var this_lesson = function (l) {
			return _elm_lang$core$Native_Utils.eq(
				_elm_lang$core$String$length(l.body),
				0) ? A2(
				_elm_lang$html$Html$li,
				_user$project$Iphod_Sunday$hoverable(
					{
						ctor: '::',
						_0: _user$project$Iphod_Sunday$this_style(l),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								A2(_user$project$Iphod_Sunday$ChangeText, l.section, ver)),
							_1: {ctor: '[]'}
						}
					}),
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(l.read),
					_1: {ctor: '[]'}
				}) : A2(
				_elm_lang$html$Html$li,
				_user$project$Iphod_Sunday$hoverable(
					{
						ctor: '::',
						_0: _user$project$Iphod_Sunday$this_style(l),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Iphod_Sunday$ToggleShow(l)),
							_1: {ctor: '[]'}
						}
					}),
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(l.read),
					_1: {ctor: '[]'}
				});
		};
		var lessons = function () {
			var _p15 = section;
			switch (_p15.ctor) {
				case 'OT':
					return model.ot;
				case 'PS':
					return model.ps;
				case 'NT':
					return model.nt;
				default:
					return model.gs;
			}
		}();
		return A2(_elm_lang$core$List$map, this_lesson, lessons);
	});
var _user$project$Iphod_Sunday$versionSelect = F2(
	function (model, lesson) {
		var thisVersion = function (ver) {
			return A2(
				_elm_lang$html$Html$option,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(ver),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$selected(
							_elm_lang$core$Native_Utils.eq(ver, lesson.version)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(ver),
					_1: {ctor: '[]'}
				});
		};
		return A2(
			_elm_lang$html$Html$select,
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html_Events$on,
					'change',
					A2(
						_elm_lang$core$Json_Decode$map,
						_user$project$Iphod_Sunday$ChangeText(lesson.section),
						_elm_lang$html$Html_Events$targetValue)),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				thisVersion,
				A2(_user$project$Iphod_Sunday$selections, model, lesson)));
	});
var _user$project$Iphod_Sunday$UpdateAltReading = F2(
	function (a, b) {
		return {ctor: 'UpdateAltReading', _0: a, _1: b};
	});
var _user$project$Iphod_Sunday$SetReading = function (a) {
	return {ctor: 'SetReading', _0: a};
};
var _user$project$Iphod_Sunday$NoOp = {ctor: 'NoOp'};
var _user$project$Iphod_Sunday$onEnter = function (msg) {
	var tagger = function (code) {
		return _elm_lang$core$Native_Utils.eq(code, 13) ? msg : _user$project$Iphod_Sunday$NoOp;
	};
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Iphod_Sunday$altReading = F2(
	function (model, lesson) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$placeholder('Alt Reading'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$autofocus(true),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(lesson.altRead),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$name('altReading'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(
									_user$project$Iphod_Sunday$UpdateAltReading(lesson)),
								_1: {
									ctor: '::',
									_0: _user$project$Iphod_Sunday$onEnter(
										_user$project$Iphod_Sunday$RequestAltReading(lesson)),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Iphod_Sunday$thisText = F2(
	function (model, lessons) {
		var this_text = function (l) {
			var getTranslation = function (s) {
				return _elm_lang$html$Html_Events$onClick(
					A2(_user$project$Iphod_Sunday$ChangeText, l.section, s));
			};
			return _elm_lang$core$Native_Utils.eq(l.section, 'ps') ? A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id(l.id),
					_1: {
						ctor: '::',
						_0: _user$project$Iphod_Sunday$bodyStyle(l),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('esv_text'),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'top', _1: '1em'},
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('translationButton'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Iphod_Sunday$ToggleShow(l)),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Hide'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('translationButton'),
										_1: {
											ctor: '::',
											_0: getTranslation('Coverdale'),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Coverdale'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('translationButton'),
											_1: {
												ctor: '::',
												_0: getTranslation('BCP'),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('BCP'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(_user$project$Iphod_Sunday$versionSelect, model, l),
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_evancz$elm_markdown$Markdown$toHtml,
							{ctor: '[]'},
							l.body),
						_1: {ctor: '[]'}
					}
				}) : A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id(l.id),
					_1: {
						ctor: '::',
						_0: _user$project$Iphod_Sunday$bodyStyle(l),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('esv_text'),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'top', _1: '1em'},
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('translationButton'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Iphod_Sunday$ToggleShow(l)),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Hide'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Iphod_Sunday$versionSelect, model, l),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Iphod_Sunday$altReading, model, l),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_evancz$elm_markdown$Markdown$toHtml,
							{ctor: '[]'},
							l.body),
						_1: {ctor: '[]'}
					}
				});
		};
		return A2(_elm_lang$core$List$map, this_text, lessons);
	});
var _user$project$Iphod_Sunday$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$table,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('readings_table'),
					_1: {
						ctor: '::',
						_0: _user$project$Iphod_Sunday$tableStyle(model),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$caption,
						{
							ctor: '::',
							_0: _user$project$Iphod_Sunday$titleStyle(model),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Iphod_Sunday$ToggleModelShow),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(model.title),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('button collect-button'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(_user$project$Iphod_Sunday$ToggleCollect),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Collect'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$tr,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('rowStyle'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$th,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('1st Lesson'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$th,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Psalm'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('2nd Lesson'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Gospel'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tr,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('rowStyle'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$td,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('tdStyle'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'width', _1: '20%'},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$ul,
												{
													ctor: '::',
													_0: _user$project$Iphod_Sunday$textStyle(model),
													_1: {ctor: '[]'}
												},
												A2(_user$project$Iphod_Sunday$thisReading, model, _user$project$Iphod_Sunday$OT)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$td,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('tdStyle'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'width', _1: '20%'},
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$ul,
													{
														ctor: '::',
														_0: _user$project$Iphod_Sunday$textStyle(model),
														_1: {ctor: '[]'}
													},
													A2(_user$project$Iphod_Sunday$thisReading, model, _user$project$Iphod_Sunday$PS)),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$td,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('tdStyle'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$style(
															{
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'width', _1: '20%'},
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$ul,
														{
															ctor: '::',
															_0: _user$project$Iphod_Sunday$textStyle(model),
															_1: {ctor: '[]'}
														},
														A2(_user$project$Iphod_Sunday$thisReading, model, _user$project$Iphod_Sunday$NT)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$td,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('tdStyle'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$style(
																{
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'width', _1: '20%'},
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$ul,
															{
																ctor: '::',
																_0: _user$project$Iphod_Sunday$textStyle(model),
																_1: {ctor: '[]'}
															},
															A2(_user$project$Iphod_Sunday$thisReading, model, _user$project$Iphod_Sunday$GS)),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(_user$project$Iphod_Sunday$thisText, model, model.ot)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(_user$project$Iphod_Sunday$thisText, model, model.ps)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A2(_user$project$Iphod_Sunday$thisText, model, model.nt)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								A2(_user$project$Iphod_Sunday$thisText, model, model.gs)),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$Iphod_Sunday$collectStyle(model.collect),
										_1: {ctor: '[]'}
									},
									_user$project$Iphod_Sunday$thisCollect(model.collect)),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
