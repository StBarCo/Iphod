var _user$project$MIndex$epReadingStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.ep.show,
		{ctor: '[]'});
};
var _user$project$MIndex$mpReadingStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.mp.show,
		{ctor: '[]'});
};
var _user$project$MIndex$euReadingStyle = function (model) {
	return A2(
		_user$project$Iphod_Helper$hideable,
		model.eu.show,
		{ctor: '[]'});
};
var _user$project$MIndex$oneLessonDiv = function (model) {
	var putLesson = function (l) {
		return A2(
			_elm_lang$html$Html$p,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_evancz$elm_markdown$Markdown$toHtml,
					{ctor: '[]'},
					l.body),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, putLesson, model.oneLesson));
};
var _user$project$MIndex$reflectionDiv = function (model) {
	var author = (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(model.reflection.author),
		0) > 0) ? A2(_elm_lang$core$Basics_ops['++'], '--- ', model.reflection.author) : '';
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('reflection'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_evancz$elm_markdown$Markdown$toHtml,
						{ctor: '[]'},
						model.reflection.markdown),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('author'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(author),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MIndex$setLesson = F3(
	function (model, section, lesson) {
		var newModel = function () {
			var _p0 = section;
			switch (_p0) {
				case 'mp1':
					var thisMP = model.mp;
					var newMP = _elm_lang$core$Native_Utils.update(
						thisMP,
						{mp1: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{mp: newMP});
					return newModel;
				case 'mp2':
					var thisMP = model.mp;
					var newMP = _elm_lang$core$Native_Utils.update(
						thisMP,
						{mp2: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{mp: newMP});
					return newModel;
				case 'mpp':
					var thisMP = model.mp;
					var newMP = _elm_lang$core$Native_Utils.update(
						thisMP,
						{mpp: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{mp: newMP});
					return newModel;
				case 'ep1':
					var thisEP = model.ep;
					var newEP = _elm_lang$core$Native_Utils.update(
						thisEP,
						{ep1: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{ep: newEP});
					return newModel;
				case 'ep2':
					var thisEP = model.ep;
					var newEP = _elm_lang$core$Native_Utils.update(
						thisEP,
						{ep2: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{ep: newEP});
					return newModel;
				case 'epp':
					var thisEP = model.ep;
					var newEP = _elm_lang$core$Native_Utils.update(
						thisEP,
						{epp: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{ep: newEP});
					return newModel;
				case 'ot':
					var thisEU = model.eu;
					var newEU = _elm_lang$core$Native_Utils.update(
						thisEU,
						{ot: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{eu: newEU});
					return newModel;
				case 'ps':
					var thisEU = model.eu;
					var newEU = _elm_lang$core$Native_Utils.update(
						thisEU,
						{ps: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{eu: newEU});
					return newModel;
				case 'nt':
					var thisEU = model.eu;
					var newEU = _elm_lang$core$Native_Utils.update(
						thisEU,
						{nt: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{eu: newEU});
					return newModel;
				case 'gs':
					var thisEU = model.eu;
					var newEU = _elm_lang$core$Native_Utils.update(
						thisEU,
						{gs: lesson});
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{eu: newEU});
					return newModel;
				default:
					return model;
			}
		}();
		return newModel;
	});
var _user$project$MIndex$initModel = {
	config: _user$project$Iphod_Models$configInit,
	eu: _user$project$Iphod_Models$sundayInit,
	mp: _user$project$Iphod_Models$initDailyMP,
	ep: _user$project$Iphod_Models$initDailyEP,
	reflection: _user$project$Iphod_Models$initReflection,
	oneLesson: {ctor: '[]'}
};
var _user$project$MIndex$init = {ctor: '_Tuple2', _0: _user$project$MIndex$initModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$MIndex$requestReading = _elm_lang$core$Native_Platform.outgoingPort(
	'requestReading',
	function (v) {
		return {section: v.section, version: v.version, ref: v.ref};
	});
var _user$project$MIndex$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateEU':
				var newEU = _elm_lang$core$Native_Utils.update(
					_p1._0,
					{show: true});
				var tModel = _user$project$MIndex$initModel;
				var newModel = _elm_lang$core$Native_Utils.update(
					tModel,
					{eu: newEU});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateMP':
				var newMP = _elm_lang$core$Native_Utils.update(
					_p1._0,
					{show: true});
				var tModel = _user$project$MIndex$initModel;
				var newModel = _elm_lang$core$Native_Utils.update(
					tModel,
					{mp: newMP});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateEP':
				var newEP = _elm_lang$core$Native_Utils.update(
					_p1._0,
					{show: true});
				var tModel = _user$project$MIndex$initModel;
				var newModel = _elm_lang$core$Native_Utils.update(
					tModel,
					{ep: newEP});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateReflection':
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{reflection: _p1._0});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateLesson':
				var _p3 = _p1._0;
				var _p2 = A2(_elm_lang$core$Debug$log, 'UPDATE LESSON', _p3);
				var section = A2(
					_elm_lang$core$Maybe$withDefault,
					_user$project$Iphod_Models$initLesson,
					_elm_lang$core$List$head(_p3)).section;
				var newModel = A3(_user$project$MIndex$setLesson, _user$project$MIndex$initModel, section, _p3);
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'ModEU':
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						eu: A2(_user$project$Iphod_Sunday$update, _p1._0, model.eu)
					});
				var newCmd = _elm_lang$core$String$isEmpty(newModel.eu.sectionUpdate.ref) ? _elm_lang$core$Platform_Cmd$none : _user$project$MIndex$requestReading(newModel.eu.sectionUpdate);
				return {ctor: '_Tuple2', _0: newModel, _1: newCmd};
			case 'ModMP':
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						mp: A2(_user$project$Iphod_MPReading$update, _p1._0, model.mp)
					});
				var newCmd = _elm_lang$core$String$isEmpty(newModel.mp.sectionUpdate.ref) ? _elm_lang$core$Platform_Cmd$none : _user$project$MIndex$requestReading(newModel.mp.sectionUpdate);
				return {ctor: '_Tuple2', _0: newModel, _1: newCmd};
			default:
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						ep: A2(_user$project$Iphod_EPReading$update, _p1._0, model.ep)
					});
				var newCmd = _elm_lang$core$String$isEmpty(newModel.ep.sectionUpdate.ref) ? _elm_lang$core$Platform_Cmd$none : _user$project$MIndex$requestReading(newModel.ep.sectionUpdate);
				return {ctor: '_Tuple2', _0: newModel, _1: newCmd};
		}
	});
var _user$project$MIndex$requestAltReading = _elm_lang$core$Native_Platform.outgoingPort(
	'requestAltReading',
	function (v) {
		return _elm_lang$core$Native_List.toArray(v).map(
			function (v) {
				return v;
			});
	});
var _user$project$MIndex$portEU = _elm_lang$core$Native_Platform.incomingPort(
	'portEU',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (ofType) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (date) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (season) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (week) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (title) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (show) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (config) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (colors) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (collect) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (ot) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (ps) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (nt) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (gs) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (sectionUpdate) {
																													return _elm_lang$core$Json_Decode$succeed(
																														{ofType: ofType, date: date, season: season, week: week, title: title, show: show, config: config, colors: colors, collect: collect, ot: ot, ps: ps, nt: nt, gs: gs, sectionUpdate: sectionUpdate});
																												},
																												A2(
																													_elm_lang$core$Json_Decode$field,
																													'sectionUpdate',
																													A2(
																														_elm_lang$core$Json_Decode$andThen,
																														function (section) {
																															return A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (version) {
																																	return A2(
																																		_elm_lang$core$Json_Decode$andThen,
																																		function (ref) {
																																			return _elm_lang$core$Json_Decode$succeed(
																																				{section: section, version: version, ref: ref});
																																		},
																																		A2(_elm_lang$core$Json_Decode$field, 'ref', _elm_lang$core$Json_Decode$string));
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																														},
																														A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string))));
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'gs',
																											_elm_lang$core$Json_Decode$list(
																												A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (style) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (show_fn) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (show_vn) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (read) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (body) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (id) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (section) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (version) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (altRead) {
																																																return A2(
																																																	_elm_lang$core$Json_Decode$andThen,
																																																	function (notes) {
																																																		return A2(
																																																			_elm_lang$core$Json_Decode$andThen,
																																																			function (cmd) {
																																																				return _elm_lang$core$Json_Decode$succeed(
																																																					{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																																			},
																																																			A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																																	},
																																																	A2(
																																																		_elm_lang$core$Json_Decode$field,
																																																		'notes',
																																																		_elm_lang$core$Json_Decode$list(
																																																			A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (reading) {
																																																					return A2(
																																																						_elm_lang$core$Json_Decode$andThen,
																																																						function (text) {
																																																							return A2(
																																																								_elm_lang$core$Json_Decode$andThen,
																																																								function (time) {
																																																									return _elm_lang$core$Json_Decode$succeed(
																																																										{reading: reading, text: text, time: time});
																																																								},
																																																								A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																						},
																																																						A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																															},
																																															A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'nt',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (style) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_fn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (show_vn) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (read) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (body) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (id) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (section) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (version) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (altRead) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (notes) {
																																																return A2(
																																																	_elm_lang$core$Json_Decode$andThen,
																																																	function (cmd) {
																																																		return _elm_lang$core$Json_Decode$succeed(
																																																			{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																																	},
																																																	A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																															},
																																															A2(
																																																_elm_lang$core$Json_Decode$field,
																																																'notes',
																																																_elm_lang$core$Json_Decode$list(
																																																	A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (reading) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (text) {
																																																					return A2(
																																																						_elm_lang$core$Json_Decode$andThen,
																																																						function (time) {
																																																							return _elm_lang$core$Json_Decode$succeed(
																																																								{reading: reading, text: text, time: time});
																																																						},
																																																						A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(
																							_elm_lang$core$Json_Decode$field,
																							'ps',
																							_elm_lang$core$Json_Decode$list(
																								A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (style) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_fn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_vn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (read) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (body) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (id) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (section) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (version) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (altRead) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (notes) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (cmd) {
																																																return _elm_lang$core$Json_Decode$succeed(
																																																	{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																															},
																																															A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																													},
																																													A2(
																																														_elm_lang$core$Json_Decode$field,
																																														'notes',
																																														_elm_lang$core$Json_Decode$list(
																																															A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (reading) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (text) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (time) {
																																																					return _elm_lang$core$Json_Decode$succeed(
																																																						{reading: reading, text: text, time: time});
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																				},
																				A2(
																					_elm_lang$core$Json_Decode$field,
																					'ot',
																					_elm_lang$core$Json_Decode$list(
																						A2(
																							_elm_lang$core$Json_Decode$andThen,
																							function (style) {
																								return A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (show) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show_fn) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_vn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (read) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (body) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (id) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (section) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (version) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (altRead) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (notes) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (cmd) {
																																														return _elm_lang$core$Json_Decode$succeed(
																																															{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(
																																												_elm_lang$core$Json_Decode$field,
																																												'notes',
																																												_elm_lang$core$Json_Decode$list(
																																													A2(
																																														_elm_lang$core$Json_Decode$andThen,
																																														function (reading) {
																																															return A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (text) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (time) {
																																																			return _elm_lang$core$Json_Decode$succeed(
																																																				{reading: reading, text: text, time: time});
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																														},
																																														A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																							},
																							A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																		},
																		A2(
																			_elm_lang$core$Json_Decode$field,
																			'collect',
																			A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (instruction) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (title) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (collects) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (show) {
																											return _elm_lang$core$Json_Decode$succeed(
																												{instruction: instruction, title: title, collects: collects, show: show});
																										},
																										A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'collects',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (collect) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (propers) {
																														return _elm_lang$core$Json_Decode$succeed(
																															{collect: collect, propers: propers});
																													},
																													A2(
																														_elm_lang$core$Json_Decode$field,
																														'propers',
																														_elm_lang$core$Json_Decode$list(
																															A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (title) {
																																	return A2(
																																		_elm_lang$core$Json_Decode$andThen,
																																		function (text) {
																																			return _elm_lang$core$Json_Decode$succeed(
																																				{title: title, text: text});
																																		},
																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)))));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'collect', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'instruction', _elm_lang$core$Json_Decode$string))));
																},
																A2(
																	_elm_lang$core$Json_Decode$field,
																	'colors',
																	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'config',
															A2(
																_elm_lang$core$Json_Decode$andThen,
																function (ot) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (ps) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (nt) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (gs) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (fnotes) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (vers) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (current) {
																													return _elm_lang$core$Json_Decode$succeed(
																														{ot: ot, ps: ps, nt: nt, gs: gs, fnotes: fnotes, vers: vers, current: current});
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'current', _elm_lang$core$Json_Decode$string));
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'vers',
																											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																								},
																								A2(_elm_lang$core$Json_Decode$field, 'fnotes', _elm_lang$core$Json_Decode$string));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'gs', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'nt', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'ps', _elm_lang$core$Json_Decode$string));
																},
																A2(_elm_lang$core$Json_Decode$field, 'ot', _elm_lang$core$Json_Decode$string))));
												},
												A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
										},
										A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'week', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'season', _elm_lang$core$Json_Decode$string));
				},
				A2(_elm_lang$core$Json_Decode$field, 'date', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'ofType', _elm_lang$core$Json_Decode$string)));
var _user$project$MIndex$portMP = _elm_lang$core$Native_Platform.incomingPort(
	'portMP',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (colors) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (date) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (day) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (season) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (title) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (week) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (config) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (show) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (collect) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (mp1) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (mp2) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (mpp) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (sectionUpdate) {
																											return _elm_lang$core$Json_Decode$succeed(
																												{colors: colors, date: date, day: day, season: season, title: title, week: week, config: config, show: show, collect: collect, mp1: mp1, mp2: mp2, mpp: mpp, sectionUpdate: sectionUpdate});
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'sectionUpdate',
																											A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (section) {
																													return A2(
																														_elm_lang$core$Json_Decode$andThen,
																														function (version) {
																															return A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (ref) {
																																	return _elm_lang$core$Json_Decode$succeed(
																																		{section: section, version: version, ref: ref});
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'ref', _elm_lang$core$Json_Decode$string));
																														},
																														A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string))));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'mpp',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (style) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_fn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (show_vn) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (read) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (body) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (id) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (section) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (version) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (altRead) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (notes) {
																																																return A2(
																																																	_elm_lang$core$Json_Decode$andThen,
																																																	function (cmd) {
																																																		return _elm_lang$core$Json_Decode$succeed(
																																																			{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																																	},
																																																	A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																															},
																																															A2(
																																																_elm_lang$core$Json_Decode$field,
																																																'notes',
																																																_elm_lang$core$Json_Decode$list(
																																																	A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (reading) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (text) {
																																																					return A2(
																																																						_elm_lang$core$Json_Decode$andThen,
																																																						function (time) {
																																																							return _elm_lang$core$Json_Decode$succeed(
																																																								{reading: reading, text: text, time: time});
																																																						},
																																																						A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(
																							_elm_lang$core$Json_Decode$field,
																							'mp2',
																							_elm_lang$core$Json_Decode$list(
																								A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (style) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_fn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_vn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (read) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (body) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (id) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (section) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (version) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (altRead) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (notes) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (cmd) {
																																																return _elm_lang$core$Json_Decode$succeed(
																																																	{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																															},
																																															A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																													},
																																													A2(
																																														_elm_lang$core$Json_Decode$field,
																																														'notes',
																																														_elm_lang$core$Json_Decode$list(
																																															A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (reading) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (text) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (time) {
																																																					return _elm_lang$core$Json_Decode$succeed(
																																																						{reading: reading, text: text, time: time});
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																				},
																				A2(
																					_elm_lang$core$Json_Decode$field,
																					'mp1',
																					_elm_lang$core$Json_Decode$list(
																						A2(
																							_elm_lang$core$Json_Decode$andThen,
																							function (style) {
																								return A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (show) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show_fn) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_vn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (read) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (body) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (id) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (section) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (version) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (altRead) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (notes) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (cmd) {
																																														return _elm_lang$core$Json_Decode$succeed(
																																															{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(
																																												_elm_lang$core$Json_Decode$field,
																																												'notes',
																																												_elm_lang$core$Json_Decode$list(
																																													A2(
																																														_elm_lang$core$Json_Decode$andThen,
																																														function (reading) {
																																															return A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (text) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (time) {
																																																			return _elm_lang$core$Json_Decode$succeed(
																																																				{reading: reading, text: text, time: time});
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																														},
																																														A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																							},
																							A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																		},
																		A2(
																			_elm_lang$core$Json_Decode$field,
																			'collect',
																			A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (instruction) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (title) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (collects) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (show) {
																											return _elm_lang$core$Json_Decode$succeed(
																												{instruction: instruction, title: title, collects: collects, show: show});
																										},
																										A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'collects',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (collect) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (propers) {
																														return _elm_lang$core$Json_Decode$succeed(
																															{collect: collect, propers: propers});
																													},
																													A2(
																														_elm_lang$core$Json_Decode$field,
																														'propers',
																														_elm_lang$core$Json_Decode$list(
																															A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (title) {
																																	return A2(
																																		_elm_lang$core$Json_Decode$andThen,
																																		function (text) {
																																			return _elm_lang$core$Json_Decode$succeed(
																																				{title: title, text: text});
																																		},
																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)))));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'collect', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'instruction', _elm_lang$core$Json_Decode$string))));
																},
																A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'config',
															A2(
																_elm_lang$core$Json_Decode$andThen,
																function (ot) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (ps) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (nt) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (gs) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (fnotes) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (vers) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (current) {
																													return _elm_lang$core$Json_Decode$succeed(
																														{ot: ot, ps: ps, nt: nt, gs: gs, fnotes: fnotes, vers: vers, current: current});
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'current', _elm_lang$core$Json_Decode$string));
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'vers',
																											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																								},
																								A2(_elm_lang$core$Json_Decode$field, 'fnotes', _elm_lang$core$Json_Decode$string));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'gs', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'nt', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'ps', _elm_lang$core$Json_Decode$string));
																},
																A2(_elm_lang$core$Json_Decode$field, 'ot', _elm_lang$core$Json_Decode$string))));
												},
												A2(_elm_lang$core$Json_Decode$field, 'week', _elm_lang$core$Json_Decode$string));
										},
										A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'season', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'day', _elm_lang$core$Json_Decode$string));
				},
				A2(_elm_lang$core$Json_Decode$field, 'date', _elm_lang$core$Json_Decode$string));
		},
		A2(
			_elm_lang$core$Json_Decode$field,
			'colors',
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))));
var _user$project$MIndex$portEP = _elm_lang$core$Native_Platform.incomingPort(
	'portEP',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (colors) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (date) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (day) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (season) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (title) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (week) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (config) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (show) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (collect) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (ep1) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (ep2) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (epp) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (sectionUpdate) {
																											return _elm_lang$core$Json_Decode$succeed(
																												{colors: colors, date: date, day: day, season: season, title: title, week: week, config: config, show: show, collect: collect, ep1: ep1, ep2: ep2, epp: epp, sectionUpdate: sectionUpdate});
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'sectionUpdate',
																											A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (section) {
																													return A2(
																														_elm_lang$core$Json_Decode$andThen,
																														function (version) {
																															return A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (ref) {
																																	return _elm_lang$core$Json_Decode$succeed(
																																		{section: section, version: version, ref: ref});
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'ref', _elm_lang$core$Json_Decode$string));
																														},
																														A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string))));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'epp',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (style) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_fn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (show_vn) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (read) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (body) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (id) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (section) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (version) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (altRead) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (notes) {
																																																return A2(
																																																	_elm_lang$core$Json_Decode$andThen,
																																																	function (cmd) {
																																																		return _elm_lang$core$Json_Decode$succeed(
																																																			{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																																	},
																																																	A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																															},
																																															A2(
																																																_elm_lang$core$Json_Decode$field,
																																																'notes',
																																																_elm_lang$core$Json_Decode$list(
																																																	A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (reading) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (text) {
																																																					return A2(
																																																						_elm_lang$core$Json_Decode$andThen,
																																																						function (time) {
																																																							return _elm_lang$core$Json_Decode$succeed(
																																																								{reading: reading, text: text, time: time});
																																																						},
																																																						A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(
																							_elm_lang$core$Json_Decode$field,
																							'ep2',
																							_elm_lang$core$Json_Decode$list(
																								A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (style) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_fn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (show_vn) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (read) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (body) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (id) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (section) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (version) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (altRead) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (notes) {
																																														return A2(
																																															_elm_lang$core$Json_Decode$andThen,
																																															function (cmd) {
																																																return _elm_lang$core$Json_Decode$succeed(
																																																	{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																															},
																																															A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																													},
																																													A2(
																																														_elm_lang$core$Json_Decode$field,
																																														'notes',
																																														_elm_lang$core$Json_Decode$list(
																																															A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (reading) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (text) {
																																																			return A2(
																																																				_elm_lang$core$Json_Decode$andThen,
																																																				function (time) {
																																																					return _elm_lang$core$Json_Decode$succeed(
																																																						{reading: reading, text: text, time: time});
																																																				},
																																																				A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																											},
																																											A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																				},
																				A2(
																					_elm_lang$core$Json_Decode$field,
																					'ep1',
																					_elm_lang$core$Json_Decode$list(
																						A2(
																							_elm_lang$core$Json_Decode$andThen,
																							function (style) {
																								return A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (show) {
																										return A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (show_fn) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (show_vn) {
																														return A2(
																															_elm_lang$core$Json_Decode$andThen,
																															function (read) {
																																return A2(
																																	_elm_lang$core$Json_Decode$andThen,
																																	function (body) {
																																		return A2(
																																			_elm_lang$core$Json_Decode$andThen,
																																			function (id) {
																																				return A2(
																																					_elm_lang$core$Json_Decode$andThen,
																																					function (section) {
																																						return A2(
																																							_elm_lang$core$Json_Decode$andThen,
																																							function (version) {
																																								return A2(
																																									_elm_lang$core$Json_Decode$andThen,
																																									function (altRead) {
																																										return A2(
																																											_elm_lang$core$Json_Decode$andThen,
																																											function (notes) {
																																												return A2(
																																													_elm_lang$core$Json_Decode$andThen,
																																													function (cmd) {
																																														return _elm_lang$core$Json_Decode$succeed(
																																															{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																																													},
																																													A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																																											},
																																											A2(
																																												_elm_lang$core$Json_Decode$field,
																																												'notes',
																																												_elm_lang$core$Json_Decode$list(
																																													A2(
																																														_elm_lang$core$Json_Decode$andThen,
																																														function (reading) {
																																															return A2(
																																																_elm_lang$core$Json_Decode$andThen,
																																																function (text) {
																																																	return A2(
																																																		_elm_lang$core$Json_Decode$andThen,
																																																		function (time) {
																																																			return _elm_lang$core$Json_Decode$succeed(
																																																				{reading: reading, text: text, time: time});
																																																		},
																																																		A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																																																},
																																																A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																														},
																																														A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																																									},
																																									A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																																							},
																																							A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																					},
																																					A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
																																			},
																																			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
																																	},
																																	A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
																															},
																															A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
																													},
																													A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																							},
																							A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string)))));
																		},
																		A2(
																			_elm_lang$core$Json_Decode$field,
																			'collect',
																			A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (instruction) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (title) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (collects) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (show) {
																											return _elm_lang$core$Json_Decode$succeed(
																												{instruction: instruction, title: title, collects: collects, show: show});
																										},
																										A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'collects',
																									_elm_lang$core$Json_Decode$list(
																										A2(
																											_elm_lang$core$Json_Decode$andThen,
																											function (collect) {
																												return A2(
																													_elm_lang$core$Json_Decode$andThen,
																													function (propers) {
																														return _elm_lang$core$Json_Decode$succeed(
																															{collect: collect, propers: propers});
																													},
																													A2(
																														_elm_lang$core$Json_Decode$field,
																														'propers',
																														_elm_lang$core$Json_Decode$list(
																															A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (title) {
																																	return A2(
																																		_elm_lang$core$Json_Decode$andThen,
																																		function (text) {
																																			return _elm_lang$core$Json_Decode$succeed(
																																				{title: title, text: text});
																																		},
																																		A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)))));
																											},
																											A2(_elm_lang$core$Json_Decode$field, 'collect', _elm_lang$core$Json_Decode$string)))));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'instruction', _elm_lang$core$Json_Decode$string))));
																},
																A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'config',
															A2(
																_elm_lang$core$Json_Decode$andThen,
																function (ot) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (ps) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (nt) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (gs) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (fnotes) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (vers) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (current) {
																													return _elm_lang$core$Json_Decode$succeed(
																														{ot: ot, ps: ps, nt: nt, gs: gs, fnotes: fnotes, vers: vers, current: current});
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'current', _elm_lang$core$Json_Decode$string));
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'vers',
																											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																								},
																								A2(_elm_lang$core$Json_Decode$field, 'fnotes', _elm_lang$core$Json_Decode$string));
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'gs', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'nt', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'ps', _elm_lang$core$Json_Decode$string));
																},
																A2(_elm_lang$core$Json_Decode$field, 'ot', _elm_lang$core$Json_Decode$string))));
												},
												A2(_elm_lang$core$Json_Decode$field, 'week', _elm_lang$core$Json_Decode$string));
										},
										A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'season', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'day', _elm_lang$core$Json_Decode$string));
				},
				A2(_elm_lang$core$Json_Decode$field, 'date', _elm_lang$core$Json_Decode$string));
		},
		A2(
			_elm_lang$core$Json_Decode$field,
			'colors',
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))));
var _user$project$MIndex$portLesson = _elm_lang$core$Native_Platform.incomingPort(
	'portLesson',
	_elm_lang$core$Json_Decode$list(
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (style) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (show) {
						return A2(
							_elm_lang$core$Json_Decode$andThen,
							function (show_fn) {
								return A2(
									_elm_lang$core$Json_Decode$andThen,
									function (show_vn) {
										return A2(
											_elm_lang$core$Json_Decode$andThen,
											function (read) {
												return A2(
													_elm_lang$core$Json_Decode$andThen,
													function (body) {
														return A2(
															_elm_lang$core$Json_Decode$andThen,
															function (id) {
																return A2(
																	_elm_lang$core$Json_Decode$andThen,
																	function (section) {
																		return A2(
																			_elm_lang$core$Json_Decode$andThen,
																			function (version) {
																				return A2(
																					_elm_lang$core$Json_Decode$andThen,
																					function (altRead) {
																						return A2(
																							_elm_lang$core$Json_Decode$andThen,
																							function (notes) {
																								return A2(
																									_elm_lang$core$Json_Decode$andThen,
																									function (cmd) {
																										return _elm_lang$core$Json_Decode$succeed(
																											{style: style, show: show, show_fn: show_fn, show_vn: show_vn, read: read, body: body, id: id, section: section, version: version, altRead: altRead, notes: notes, cmd: cmd});
																									},
																									A2(_elm_lang$core$Json_Decode$field, 'cmd', _elm_lang$core$Json_Decode$string));
																							},
																							A2(
																								_elm_lang$core$Json_Decode$field,
																								'notes',
																								_elm_lang$core$Json_Decode$list(
																									A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (reading) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (text) {
																													return A2(
																														_elm_lang$core$Json_Decode$andThen,
																														function (time) {
																															return _elm_lang$core$Json_Decode$succeed(
																																{reading: reading, text: text, time: time});
																														},
																														A2(_elm_lang$core$Json_Decode$field, 'time', _elm_lang$core$Json_Decode$string));
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																										},
																										A2(_elm_lang$core$Json_Decode$field, 'reading', _elm_lang$core$Json_Decode$string)))));
																					},
																					A2(_elm_lang$core$Json_Decode$field, 'altRead', _elm_lang$core$Json_Decode$string));
																			},
																			A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																	},
																	A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string));
															},
															A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string));
													},
													A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
											},
											A2(_elm_lang$core$Json_Decode$field, 'read', _elm_lang$core$Json_Decode$string));
									},
									A2(_elm_lang$core$Json_Decode$field, 'show_vn', _elm_lang$core$Json_Decode$bool));
							},
							A2(_elm_lang$core$Json_Decode$field, 'show_fn', _elm_lang$core$Json_Decode$bool));
					},
					A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
			},
			A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string))));
var _user$project$MIndex$portReflection = _elm_lang$core$Native_Platform.incomingPort(
	'portReflection',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (author) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (markdown) {
					return _elm_lang$core$Json_Decode$succeed(
						{author: author, markdown: markdown});
				},
				A2(_elm_lang$core$Json_Decode$field, 'markdown', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'author', _elm_lang$core$Json_Decode$string)));
var _user$project$MIndex$portReadings = _elm_lang$core$Native_Platform.incomingPort(
	'portReadings',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (date) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (title) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (collect) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (mp1) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (mp2) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (mpp) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (ep1) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (ep2) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (epp) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (ot) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (ps) {
																							return A2(
																								_elm_lang$core$Json_Decode$andThen,
																								function (nt) {
																									return A2(
																										_elm_lang$core$Json_Decode$andThen,
																										function (gs) {
																											return A2(
																												_elm_lang$core$Json_Decode$andThen,
																												function (show) {
																													return A2(
																														_elm_lang$core$Json_Decode$andThen,
																														function (sectionUpdate) {
																															return _elm_lang$core$Json_Decode$succeed(
																																{date: date, title: title, collect: collect, mp1: mp1, mp2: mp2, mpp: mpp, ep1: ep1, ep2: ep2, epp: epp, ot: ot, ps: ps, nt: nt, gs: gs, show: show, sectionUpdate: sectionUpdate});
																														},
																														A2(
																															_elm_lang$core$Json_Decode$field,
																															'sectionUpdate',
																															A2(
																																_elm_lang$core$Json_Decode$andThen,
																																function (section) {
																																	return A2(
																																		_elm_lang$core$Json_Decode$andThen,
																																		function (version) {
																																			return A2(
																																				_elm_lang$core$Json_Decode$andThen,
																																				function (ref) {
																																					return _elm_lang$core$Json_Decode$succeed(
																																						{section: section, version: version, ref: ref});
																																				},
																																				A2(_elm_lang$core$Json_Decode$field, 'ref', _elm_lang$core$Json_Decode$string));
																																		},
																																		A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$string));
																																},
																																A2(_elm_lang$core$Json_Decode$field, 'section', _elm_lang$core$Json_Decode$string))));
																												},
																												A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
																										},
																										A2(
																											_elm_lang$core$Json_Decode$field,
																											'gs',
																											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																								},
																								A2(
																									_elm_lang$core$Json_Decode$field,
																									'nt',
																									_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																						},
																						A2(
																							_elm_lang$core$Json_Decode$field,
																							'ps',
																							_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																				},
																				A2(
																					_elm_lang$core$Json_Decode$field,
																					'ot',
																					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																		},
																		A2(
																			_elm_lang$core$Json_Decode$field,
																			'epp',
																			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
																},
																A2(
																	_elm_lang$core$Json_Decode$field,
																	'ep2',
																	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'ep1',
															_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'mpp',
													_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
										},
										A2(
											_elm_lang$core$Json_Decode$field,
											'mp2',
											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
								},
								A2(
									_elm_lang$core$Json_Decode$field,
									'mp1',
									_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
						},
						A2(
							_elm_lang$core$Json_Decode$field,
							'collect',
							A2(
								_elm_lang$core$Json_Decode$andThen,
								function (instruction) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (title) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (collects) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (show) {
															return _elm_lang$core$Json_Decode$succeed(
																{instruction: instruction, title: title, collects: collects, show: show});
														},
														A2(_elm_lang$core$Json_Decode$field, 'show', _elm_lang$core$Json_Decode$bool));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'collects',
													_elm_lang$core$Json_Decode$list(
														A2(
															_elm_lang$core$Json_Decode$andThen,
															function (collect) {
																return A2(
																	_elm_lang$core$Json_Decode$andThen,
																	function (propers) {
																		return _elm_lang$core$Json_Decode$succeed(
																			{collect: collect, propers: propers});
																	},
																	A2(
																		_elm_lang$core$Json_Decode$field,
																		'propers',
																		_elm_lang$core$Json_Decode$list(
																			A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (title) {
																					return A2(
																						_elm_lang$core$Json_Decode$andThen,
																						function (text) {
																							return _elm_lang$core$Json_Decode$succeed(
																								{title: title, text: text});
																						},
																						A2(_elm_lang$core$Json_Decode$field, 'text', _elm_lang$core$Json_Decode$string));
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)))));
															},
															A2(_elm_lang$core$Json_Decode$field, 'collect', _elm_lang$core$Json_Decode$string)))));
										},
										A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'instruction', _elm_lang$core$Json_Decode$string))));
				},
				A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'date', _elm_lang$core$Json_Decode$string)));
var _user$project$MIndex$Model = F6(
	function (a, b, c, d, e, f) {
		return {config: a, eu: b, mp: c, ep: d, reflection: e, oneLesson: f};
	});
var _user$project$MIndex$ModEP = function (a) {
	return {ctor: 'ModEP', _0: a};
};
var _user$project$MIndex$epDiv = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$map,
				_user$project$MIndex$ModEP,
				_user$project$Iphod_EPReading$view(model.ep)),
			_1: {ctor: '[]'}
		});
};
var _user$project$MIndex$ModMP = function (a) {
	return {ctor: 'ModMP', _0: a};
};
var _user$project$MIndex$mpDiv = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$map,
				_user$project$MIndex$ModMP,
				_user$project$Iphod_MPReading$view(model.mp)),
			_1: {ctor: '[]'}
		});
};
var _user$project$MIndex$ModEU = function (a) {
	return {ctor: 'ModEU', _0: a};
};
var _user$project$MIndex$euDiv = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$map,
				_user$project$MIndex$ModEU,
				_user$project$Iphod_Sunday$view(model.eu)),
			_1: {ctor: '[]'}
		});
};
var _user$project$MIndex$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$MIndex$euDiv(model),
			_1: {
				ctor: '::',
				_0: _user$project$MIndex$mpDiv(model),
				_1: {
					ctor: '::',
					_0: _user$project$MIndex$epDiv(model),
					_1: {
						ctor: '::',
						_0: _user$project$MIndex$reflectionDiv(model),
						_1: {
							ctor: '::',
							_0: _user$project$MIndex$oneLessonDiv(model),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$MIndex$UpdateLesson = function (a) {
	return {ctor: 'UpdateLesson', _0: a};
};
var _user$project$MIndex$UpdateReflection = function (a) {
	return {ctor: 'UpdateReflection', _0: a};
};
var _user$project$MIndex$UpdateEP = function (a) {
	return {ctor: 'UpdateEP', _0: a};
};
var _user$project$MIndex$UpdateMP = function (a) {
	return {ctor: 'UpdateMP', _0: a};
};
var _user$project$MIndex$UpdateEU = function (a) {
	return {ctor: 'UpdateEU', _0: a};
};
var _user$project$MIndex$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$MIndex$portEU(_user$project$MIndex$UpdateEU),
			_1: {
				ctor: '::',
				_0: _user$project$MIndex$portMP(_user$project$MIndex$UpdateMP),
				_1: {
					ctor: '::',
					_0: _user$project$MIndex$portEP(_user$project$MIndex$UpdateEP),
					_1: {
						ctor: '::',
						_0: _user$project$MIndex$portLesson(_user$project$MIndex$UpdateLesson),
						_1: {
							ctor: '::',
							_0: _user$project$MIndex$portReflection(_user$project$MIndex$UpdateReflection),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$MIndex$main = _elm_lang$html$Html$program(
	{init: _user$project$MIndex$init, update: _user$project$MIndex$update, view: _user$project$MIndex$view, subscriptions: _user$project$MIndex$subscriptions})();
var _user$project$MIndex$NoOp = {ctor: 'NoOp'};
