Elm.Iphod = Elm.Iphod || {};
Elm.Iphod.make = function (_elm) {
   "use strict";
   _elm.Iphod = _elm.Iphod || {};
   if (_elm.Iphod.values) return _elm.Iphod.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp = Elm.StartApp.make(_elm),
   $String = Elm.String.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var inactiveButtonStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                                             ,_0: "position"
                                                             ,_1: "relative"}
                                                            ,{ctor: "_Tuple2",_0: "float",_1: "left"}
                                                            ,{ctor: "_Tuple2",_0: "padding",_1: "0px 2px"}
                                                            ,{ctor: "_Tuple2",_0: "line-height",_1: "0.8"}
                                                            ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                            ,{ctor: "_Tuple2",_0: "color",_1: "lightgrey"}]));
   var buttonStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                                     ,_0: "position"
                                                     ,_1: "relative"}
                                                    ,{ctor: "_Tuple2",_0: "float",_1: "left"}
                                                    ,{ctor: "_Tuple2",_0: "padding",_1: "0px 2px"}
                                                    ,{ctor: "_Tuple2",_0: "line-height",_1: "0.8"}
                                                    ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}]));
   var readingList = function (listOfStrings) {
      return A2($String.join," ",listOfStrings);
   };
   var theseReadings = F2(function (address,readings) {
      return _U.list([A2($Html.li,
                     _U.list([]),
                     _U.list([$Html.text(readings.title)]))
                     ,A2($Html.li,
                     _U.list([]),
                     _U.list([$Html.text(A2($Basics._op["++"],
                     "OT: ",
                     readingList(readings.ot)))]))
                     ,A2($Html.li,
                     _U.list([]),
                     _U.list([$Html.text(A2($Basics._op["++"],
                     "PS: ",
                     readingList(readings.ps)))]))
                     ,A2($Html.li,
                     _U.list([]),
                     _U.list([$Html.text(A2($Basics._op["++"],
                     "NT: ",
                     readingList(readings.nt)))]))
                     ,A2($Html.li,
                     _U.list([]),
                     _U.list([$Html.text(A2($Basics._op["++"],
                     "GS: ",
                     readingList(readings.gs)))]))]);
   });
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return {ctor: "_Tuple2",_0: model,_1: $Effects.none};
         } else {
            return {ctor: "_Tuple2",_0: _p0._0,_1: $Effects.none};
         }
   });
   var SetReadings = function (a) {
      return {ctor: "SetReadings",_0: a};
   };
   var NoOp = {ctor: "NoOp"};
   var nextSunday = Elm.Native.Port.make(_elm).inboundSignal("nextSunday",
   "Iphod.Model",
   function (v) {
      return typeof v === "object" && "sunday" in v && "nextFeastDay" in v && "today" in v ? {_: {}
                                                                                             ,sunday: typeof v.sunday === "object" && "date" in v.sunday && "season" in v.sunday && "week" in v.sunday && "title" in v.sunday && "ot" in v.sunday && "ps" in v.sunday && "nt" in v.sunday && "gs" in v.sunday ? {_: {}
                                                                                                                                                                                                                                                                                                                ,date: typeof v.sunday.date === "string" || typeof v.sunday.date === "object" && v.sunday.date instanceof String ? v.sunday.date : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                v.sunday.date)
                                                                                                                                                                                                                                                                                                                ,season: typeof v.sunday.season === "string" || typeof v.sunday.season === "object" && v.sunday.season instanceof String ? v.sunday.season : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                v.sunday.season)
                                                                                                                                                                                                                                                                                                                ,week: typeof v.sunday.week === "string" || typeof v.sunday.week === "object" && v.sunday.week instanceof String ? v.sunday.week : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                v.sunday.week)
                                                                                                                                                                                                                                                                                                                ,title: typeof v.sunday.title === "string" || typeof v.sunday.title === "object" && v.sunday.title instanceof String ? v.sunday.title : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                v.sunday.title)
                                                                                                                                                                                                                                                                                                                ,ot: typeof v.sunday.ot === "object" && v.sunday.ot instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.sunday.ot.map(function (v) {
                                                                                                                                                                                                                                                                                                                   return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                   v);
                                                                                                                                                                                                                                                                                                                })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                v.sunday.ot)
                                                                                                                                                                                                                                                                                                                ,ps: typeof v.sunday.ps === "object" && v.sunday.ps instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.sunday.ps.map(function (v) {
                                                                                                                                                                                                                                                                                                                   return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                   v);
                                                                                                                                                                                                                                                                                                                })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                v.sunday.ps)
                                                                                                                                                                                                                                                                                                                ,nt: typeof v.sunday.nt === "object" && v.sunday.nt instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.sunday.nt.map(function (v) {
                                                                                                                                                                                                                                                                                                                   return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                   v);
                                                                                                                                                                                                                                                                                                                })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                v.sunday.nt)
                                                                                                                                                                                                                                                                                                                ,gs: typeof v.sunday.gs === "object" && v.sunday.gs instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.sunday.gs.map(function (v) {
                                                                                                                                                                                                                                                                                                                   return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                   v);
                                                                                                                                                                                                                                                                                                                })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                v.sunday.gs)} : _U.badPort("an object with fields `date`, `season`, `week`, `title`, `ot`, `ps`, `nt`, `gs`",
                                                                                             v.sunday)
                                                                                             ,nextFeastDay: typeof v.nextFeastDay === "object" && "date" in v.nextFeastDay && "season" in v.nextFeastDay && "week" in v.nextFeastDay && "title" in v.nextFeastDay && "ot" in v.nextFeastDay && "ps" in v.nextFeastDay && "nt" in v.nextFeastDay && "gs" in v.nextFeastDay ? {_: {}
                                                                                                                                                                                                                                                                                                                                                                            ,date: typeof v.nextFeastDay.date === "string" || typeof v.nextFeastDay.date === "object" && v.nextFeastDay.date instanceof String ? v.nextFeastDay.date : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.date)
                                                                                                                                                                                                                                                                                                                                                                            ,season: typeof v.nextFeastDay.season === "string" || typeof v.nextFeastDay.season === "object" && v.nextFeastDay.season instanceof String ? v.nextFeastDay.season : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.season)
                                                                                                                                                                                                                                                                                                                                                                            ,week: typeof v.nextFeastDay.week === "string" || typeof v.nextFeastDay.week === "object" && v.nextFeastDay.week instanceof String ? v.nextFeastDay.week : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.week)
                                                                                                                                                                                                                                                                                                                                                                            ,title: typeof v.nextFeastDay.title === "string" || typeof v.nextFeastDay.title === "object" && v.nextFeastDay.title instanceof String ? v.nextFeastDay.title : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.title)
                                                                                                                                                                                                                                                                                                                                                                            ,ot: typeof v.nextFeastDay.ot === "object" && v.nextFeastDay.ot instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.nextFeastDay.ot.map(function (v) {
                                                                                                                                                                                                                                                                                                                                                                               return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                               v);
                                                                                                                                                                                                                                                                                                                                                                            })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.ot)
                                                                                                                                                                                                                                                                                                                                                                            ,ps: typeof v.nextFeastDay.ps === "object" && v.nextFeastDay.ps instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.nextFeastDay.ps.map(function (v) {
                                                                                                                                                                                                                                                                                                                                                                               return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                               v);
                                                                                                                                                                                                                                                                                                                                                                            })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.ps)
                                                                                                                                                                                                                                                                                                                                                                            ,nt: typeof v.nextFeastDay.nt === "object" && v.nextFeastDay.nt instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.nextFeastDay.nt.map(function (v) {
                                                                                                                                                                                                                                                                                                                                                                               return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                               v);
                                                                                                                                                                                                                                                                                                                                                                            })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.nt)
                                                                                                                                                                                                                                                                                                                                                                            ,gs: typeof v.nextFeastDay.gs === "object" && v.nextFeastDay.gs instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.nextFeastDay.gs.map(function (v) {
                                                                                                                                                                                                                                                                                                                                                                               return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",
                                                                                                                                                                                                                                                                                                                                                                               v);
                                                                                                                                                                                                                                                                                                                                                                            })) : _U.badPort("an array",
                                                                                                                                                                                                                                                                                                                                                                            v.nextFeastDay.gs)} : _U.badPort("an object with fields `date`, `season`, `week`, `title`, `ot`, `ps`, `nt`, `gs`",
                                                                                             v.nextFeastDay)
                                                                                             ,today: typeof v.today === "string" || typeof v.today === "object" && v.today instanceof String ? v.today : _U.badPort("a string",
                                                                                             v.today)} : _U.badPort("an object with fields `sunday`, `nextFeastDay`, `today`",
      v);
   });
   var lastSundayFrom = $Signal.mailbox("");
   var requestLastSunday = Elm.Native.Port.make(_elm).outboundSignal("requestLastSunday",
   function (v) {
      return v;
   },
   lastSundayFrom.signal);
   var nextSundayFrom = $Signal.mailbox("");
   var requestNextSunday = Elm.Native.Port.make(_elm).outboundSignal("requestNextSunday",
   function (v) {
      return v;
   },
   nextSundayFrom.signal);
   var basicNav = F2(function (address,model) {
      return _U.list([A2($Html.button,
                     _U.list([buttonStyle
                             ,A2($Html$Events.onClick,
                             lastSundayFrom.address,
                             model.sunday.date)]),
                     _U.list([$Html.text("last Sunday")]))
                     ,A2($Html.button,
                     _U.list([buttonStyle
                             ,A2($Html$Events.onClick,
                             nextSundayFrom.address,
                             model.sunday.date)]),
                     _U.list([$Html.text("next Sunday")]))
                     ,A2($Html.button,
                     _U.list([inactiveButtonStyle]),
                     _U.list([$Html.text("Daily Office")]))
                     ,A2($Html.button,
                     _U.list([inactiveButtonStyle]),
                     _U.list([$Html.text("Morning Psalms")]))
                     ,A2($Html.button,
                     _U.list([inactiveButtonStyle]),
                     _U.list([$Html.text("Evening Psalms")]))
                     ,A2($Html.br,_U.list([]),_U.list([]))]);
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.ul,
      _U.list([]),
      _U.list([A2($Html.li,
              _U.list([]),
              _U.list([$Html.text(A2($Basics._op["++"],
              "From: ",
              model.today))]))
              ,A2($Html.li,
              _U.list([]),
              _U.list([$Html.text(A2($Basics._op["++"],
              model.sunday.title,
              A2($Basics._op["++"]," - ",model.sunday.date)))]))
              ,A2($Html.li,
              _U.list([]),
              _U.list([$Html.text(A2($Basics._op["++"],
              "Next Feast Day: ",
              A2($Basics._op["++"],
              model.nextFeastDay.title,
              A2($Basics._op["++"]," - ",model.nextFeastDay.date))))]))
              ,A2($Html.li,_U.list([]),A2(basicNav,address,model))
              ,A2($Html.li,
              _U.list([]),
              _U.list([A2($Html.ul,
              _U.list([]),
              A2(theseReadings,address,model.sunday))]))
              ,A2($Html.li,
              _U.list([]),
              _U.list([A2($Html.ul,
              _U.list([]),
              A2(theseReadings,address,model.nextFeastDay))]))]))]));
   });
   var incomingActions = A2($Signal.map,SetReadings,nextSunday);
   var Model = F3(function (a,b,c) {
      return {sunday: a,nextFeastDay: b,today: c};
   });
   var initReadings = {date: ""
                      ,season: ""
                      ,week: ""
                      ,title: ""
                      ,ot: _U.list([])
                      ,ps: _U.list([])
                      ,nt: _U.list([])
                      ,gs: _U.list([])};
   var initModel = {sunday: initReadings
                   ,nextFeastDay: initReadings
                   ,today: ""};
   var init = {ctor: "_Tuple2",_0: initModel,_1: $Effects.none};
   var Readings = F8(function (a,b,c,d,e,f,g,h) {
      return {date: a
             ,season: b
             ,week: c
             ,title: d
             ,ot: e
             ,ps: f
             ,nt: g
             ,gs: h};
   });
   var app = $StartApp.start({init: init
                             ,update: update
                             ,view: view
                             ,inputs: _U.list([incomingActions])});
   var main = app.html;
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",
   app.tasks);
   return _elm.Iphod.values = {_op: _op
                              ,app: app
                              ,main: main
                              ,Readings: Readings
                              ,initReadings: initReadings
                              ,Model: Model
                              ,initModel: initModel
                              ,init: init
                              ,incomingActions: incomingActions
                              ,nextSundayFrom: nextSundayFrom
                              ,lastSundayFrom: lastSundayFrom
                              ,NoOp: NoOp
                              ,SetReadings: SetReadings
                              ,update: update
                              ,view: view
                              ,basicNav: basicNav
                              ,theseReadings: theseReadings
                              ,readingList: readingList
                              ,buttonStyle: buttonStyle
                              ,inactiveButtonStyle: inactiveButtonStyle};
};